{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/actions.js","redux/phonebook-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","contacts","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","phonebook","persistReducer","contactReducer","devTools","process","persistor","persistStore","ContactForm","nameInputId","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","contactForm","contactLabel","htmlFor","contactInput","type","onChange","buttonAdd","Component","connect","dispatch","useStyles","makeStyles","contactListItem","marginTop","backgroundColor","fontFamily","ContactListItem","onDeleteContact","classes","Card","CardContent","Divider","CardActions","IconButton","color","aria-label","component","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","handleDeleteContact","contactList","map","onInputChange","target","filterLabel","App","container","mainTitle","secondaryTitle","Filter","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.68b12380.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__4vZ1D\",\"contactLabel\":\"ContactForm_contactLabel__3J1UY\",\"contactInput\":\"ContactForm_contactInput__1rccQ\",\"buttonAdd\":\"ContactForm_buttonAdd__144oZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3pclI\",\"title\":\"App_title__3i8_k\",\"mainTitle\":\"App_mainTitle__2N3wf App_title__3i8_k\",\"secondaryTitle\":\"App_secondaryTitle__2kE9M App_title__3i8_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__28ZzY\",\"filterLabel\":\"Filter_filterLabel__1WAUk\",\"filterInput\":\"Filter_filterInput__iIYQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1lLGV\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/Add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/Delete');\r\n\r\nconst changeFilter = createAction('contacts/Filter');\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, contactReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\n        <label className={s.contactLabel} htmlFor={this.nameInputId}>\n          Name\n        </label>\n        <input\n          className={s.contactInput}\n          type=\"text\"\n          name=\"name\"\n          id={this.nameInputId}\n          value={name}\n          onChange={this.handleChange}\n        />\n\n        <label className={s.contactLabel} htmlFor={this.numberInputId}>\n          Number\n        </label>\n        <input\n          className={s.contactInput}\n          type=\"text\"\n          name=\"number\"\n          id={this.numberInputId}\n          value={number}\n          onChange={this.handleChange}\n          // required\n        />\n\n        <button className={s.buttonAdd} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.phonebook.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  contactListItem: {\n    marginTop: 10,\n    backgroundColor: '#eeeeff',\n    fontFamily: 'roboto',\n  },\n});\n\nexport default function ContactListItem({ id, name, number, onDeleteContact }) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.contactListItem}>\n      <CardContent>\n        <span>{name}:</span> {number}\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <IconButton\n          color=\"primary\"\n          aria-label=\"upload picture\"\n          component=\"span\"\n          onClick={() => onDeleteContact(id)}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport ContactListItem from './ContactListItem';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, handleDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={uuidv4()}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={handleDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\n  contacts: getVisibleContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport s from './Filter.module.css';\n\nconst ContactFilter = ({ value, onInputChange }) => {\n  const id = uuidv4();\n  return (\n    <div className={s.filter}>\n      <label className={s.filterLabel} htmlFor={id}>\n        Find contact by name\n      </label>\n      <input\n        id={id}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onInputChange}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInputChange: e => dispatch(actions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter/index';\nimport s from './App.module.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={s.container}>\n        <h1 className={s.mainTitle}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={s.secondaryTitle}>Contacts</h2>\n        <Filter />\n        <ContactList />\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}